{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemToCart = (cartItems, cartItemToRemove) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\n\n  if (existingItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(item => item.id === cartItemToRemove.id ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};","map":{"version":3,"sources":["D:/Code/Web Projects/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingItem","find","item","id","map","quantity","removeItemToCart","cartItemToRemove","filter","cartItem"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA+B;AACxD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAAjD,CAArB;;AAEA,MAAGH,YAAH,EAAiB;AACb,WAAOF,SAAS,CAACM,GAAV,CAAeF,IAAI,IACtBA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,GACE,EAAC,GAAGD,IAAJ;AAAUG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAe;AAAnC,KADF,GAEEH,IAHC,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CAXM;AAaP,OAAO,MAAMC,gBAAgB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC7D,QAAMP,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAApD,CAArB;;AAEA,MAAIH,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC7B,WAAOP,SAAS,CAACU,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACN,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAeF,IAAI,IACtBA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAA7B,GACE,EAAC,GAAGD,IAAJ;AAAUG,IAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAApC,GADF,GAEEH,IAHC,CAAP;AAKH,CAZM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd ) => {\r\n    const existingItem = cartItems.find(item => item.id === cartItemToAdd.id);\r\n\r\n    if(existingItem) {\r\n        return cartItems.map( item => \r\n            item.id === cartItemToAdd.id \r\n            ? {...item, quantity: item.quantity +1}\r\n            : item)\r\n    }\r\n\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n};\r\n\r\nexport const removeItemToCart = (cartItems, cartItemToRemove) => {\r\n    const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\r\n    \r\n    if( existingItem.quantity === 1) {\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\r\n    }\r\n    \r\n    return cartItems.map( item => \r\n        item.id === cartItemToRemove.id \r\n        ? {...item, quantity: item.quantity - 1}\r\n        : item\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}