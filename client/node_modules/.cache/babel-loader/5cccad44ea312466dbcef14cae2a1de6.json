{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web Projects\\\\crown-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setCredentials({ ...userCredentials,\n      email: '',\n      password: ''\n    });\n\n    if (password !== confirmPassword) {\n      alert('Password dont match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I don't have an account \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \" Display name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \" Sign Up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"ehc6xk6/zjED6Q9uUGJL7fCHapE=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Code/Web Projects/crown-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions'\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n\r\n    const [userCredentials, setCredentials] = useState({displayName: '', email: '', password: '', confirmPassword: ''})\r\n    const { displayName, email, password, confirmPassword} = userCredentials;\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setCredentials({...userCredentials, email: '', password: ''});\r\n\r\n        if(password !== confirmPassword) {\r\n            alert('Password dont match');\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password })\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const {value, name} = e.target;\r\n\r\n        setCredentials({...userCredentials ,[name]: value})\r\n    }\r\n    return (\r\n        <div className='sign-up'>\r\n        <h2>I don't have an account </h2>\r\n        <span>Sign up with your email</span>\r\n        \r\n        <form className='sign-up-form' onSubmit ={handleSubmit}>\r\n            <FormInput\r\n                type='text'\r\n                name='displayName'\r\n                value={displayName}\r\n                onChange={handleChange}\r\n                label=' Display name'\r\n                required\r\n            />\r\n\r\n            <FormInput\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                label='Email'\r\n                required\r\n            />\r\n\r\n            <FormInput\r\n                type='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                label='Password'\r\n                required\r\n            />\r\n\r\n            <FormInput\r\n                type='password'\r\n                name='confirmPassword'\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                label='Confirm Password'\r\n                required\r\n            />\r\n            \r\n            <CustomButton type='submit' onClick={handleSubmit} > Sign Up </CustomButton>\r\n        </form>\r\n    </div>\r\n    )\r\n        \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}