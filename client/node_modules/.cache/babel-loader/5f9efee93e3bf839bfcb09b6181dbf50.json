{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, collectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  console.log('DTKLLLLLLLLLLLLLL');\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = collectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/Code/Web Projects/crown-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","collectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","console","log","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,wBAApB,QAAmD,+BAAnD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACb,qBAAqB,EAAtB,CAAR;AACAc,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMd,cAAc,GAAGL,wBAAwB,CAACmB,QAAD,CAA/C;AACAL,MAAAA,QAAQ,CAACV,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAJD,EAKCe,KALD,CAKQC,KAAK,IAAIP,QAAQ,CAACN,sBAAsB,CAACa,KAAK,CAACC,OAAP,CAAvB,CALzB;AAMD,GATD;AAUD,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore, collectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionFailure = errorMessage => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  console.log('DTKLLLLLLLLLLLLLL');\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n    collectionRef.get()\r\n    .then( snapshot => {\r\n        const collectionsMap = collectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap))\r\n    })\r\n    .catch( error => dispatch(fetchCollectionFailure(error.message)))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}