{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    password,\n    email,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignupSuccess)]);\n}","map":{"version":3,"sources":["D:/Code/Web Projects/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignupSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,aAAvE,EAAsFC,aAAtF,QAA2G,gBAA3G;AAEA,SAASC,cAAT,EAA0BC,IAA1B,EAAgCC,yBAAhC,EAA2DC,cAA3D,QAAiF,+BAAjF;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AAC/D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACU,yBAAD,EAA4BG,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACI,aAAa,CAAC;AAACgB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACH,GAJD,CAIE,OAAMC,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACc,eAAL,CAAqBf,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAMF,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAX,CAA1B,EAAyD;AAC5D,MAAI;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAMF,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMhB,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAG,CAACE,QAAJ,EAAc;AACd,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIE,OAAOO,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUU,OAAV,GAAoB;AACvB,MAAI;AACA,UAAMrB,IAAI,CAACqB,OAAL,EAAN;AACA,UAAMhC,GAAG,CAACM,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAOgB,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACO,cAAc,CAACe,KAAD,CAAf,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,MAAV,CAAiB;AAACN,EAAAA,OAAO,EAAE;AAACE,IAAAA,QAAD;AAAWD,IAAAA,KAAX;AAAkBM,IAAAA;AAAlB;AAAV,CAAjB,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACwB,8BAAL,CAAoCP,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAM7B,GAAG,CAACQ,aAAa,CAAC;AAACgB,MAAAA,IAAD;AAAOR,MAAAA,cAAc,EAAE;AAACkB,QAAAA;AAAD;AAAvB,KAAD,CAAd,CAAT;AAEH,GAJD,CAIE,OAAOZ,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,iBAAV,CAA4B;AAACT,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAF;AAAQR,IAAAA;AAAR;AAAV,CAA5B,EAAiE;AACpE,QAAMF,uBAAuB,CAACU,IAAD,EAAOR,cAAP,CAA7B;AACH;AAED,OAAO,UAAUqB,mBAAV,GAAgC;AACnC,QAAMtC,UAAU,CAACI,eAAe,CAACmC,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AAClC,QAAMxC,UAAU,CAACI,eAAe,CAACqC,mBAAjB,EAAsCd,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM1C,UAAU,CAACI,eAAe,CAACuC,kBAAjB,EAAqCX,mBAArC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUY,cAAV,GAA2B;AAC9B,QAAM5C,UAAU,CAACI,eAAe,CAACyC,cAAjB,EAAiCZ,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUa,aAAV,GAA0B;AAC7B,QAAM9C,UAAU,CAACI,eAAe,CAAC2C,aAAjB,EAAgCb,MAAhC,CAAhB;AACH;AAED,OAAO,UAAUc,eAAV,GAA4B;AAC/B,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,eAAjB,EAAkCZ,iBAAlC,CAAhB;AACH;AAED,OAAO,UAAUa,SAAV,GAAsB;AACzB,QAAMhD,GAAG,CAAC,CAACC,IAAI,CAACmC,mBAAD,CAAL,EAA4BnC,IAAI,CAACqC,kBAAD,CAAhC,EAAsDrC,IAAI,CAACuC,kBAAD,CAA1D,EAAgFvC,IAAI,CAACyC,cAAD,CAApF,EACRzC,IAAI,CAAC2C,aAAD,CADI,EACa3C,IAAI,CAAC6C,eAAD,CADjB,CAAD,CAAT;AAEH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\r\n\r\nimport { googleProvider , auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: {email, password}}) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({payload: {password, email, displayName}}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n            \r\n    } catch (error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: { user, additionalData }}) {\r\n    yield getSnapshotFromUserAuth(user, additionalData)\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n};\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignupSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)\r\n    , call(onSignUpStart), call(onSignupSuccess)])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}