{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Web Projects\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I alredy have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"email\",\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          handleChange: this.handleChange,\n          value: this.state.password,\n          required: true,\n          label: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            children: \" Sign In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \" Sign in with GG \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Code/Web Projects/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","signInWithGoogle","auth","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const {email, password}= this.state;\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({email: '', password: ''})\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {value, name} = e.target;\r\n\r\n        this.setState({[name]: value})\r\n    }\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <div className='sign-in'>\r\n            <h2>I alredy have an account</h2>\r\n            <span>Sign in with email</span>\r\n            \r\n            <form onSubmit = {this.handleSubmit}>\r\n                <FormInput label='email' name='email' type='email' handleChange={this.handleChange} value={this.state.email} required/>\r\n                <FormInput \r\n                    id='password' \r\n                    name='password' \r\n                    type='password' \r\n                    handleChange={this.handleChange}\r\n                    value={this.state.password} \r\n                    required\r\n                    label='password'\r\n                />\r\n                <div className='buttons'>\r\n\r\n                    <CustomButton type='submit' onClick={this.handleSubmit} > Sign In </CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn > Sign in with GG </CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}